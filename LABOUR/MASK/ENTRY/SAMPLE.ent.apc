{Application 'SAMPLE' logic file generated by CSPro}
PROC GLOBAL
numeric i,x,n,som,k,tot;
array nbHHAssigned(900);
valueset valset;
file tempfile;

  function HHAssigned()
 	string reportFilename = "..\REPORTS\Assignments.html"; 	
	setfile(tempFile, reportFilename, create);
	// Standard HTML headers
	filewrite(tempFile, "<!DOCTYPE html>");
	filewrite(tempFile, "<html><head>");
	
	// Add CSS to make tables look nice
	filewrite(tempFile, "<style type='text/css'>");
	filewrite(tempFile, "table, th, td {border: 1px solid black;border-collapse: collapse;padding: 8px}");	
	filewrite(tempFile, "</style>");
	filewrite(tempFile, "<title>Resume of Assignments </title>");
	filewrite(tempFile, "</head>");
	filewrite(tempFile, "<body>");
	// Id-items
	filewrite(tempFile, "<h2><font color = blue>Resume of Assignments</font></h2>");

    nbHHAssigned.clear();
	
    //we go through lines 1 to 1 and load the recap table of assignments	
    do i=1 while i <= visualvalue(XTOTAL) 
		nbHHAssigned(visualvalue(XINTCODE(i))) = nbHHAssigned(visualvalue(XINTCODE(i))) + 1;
    enddo;
    
    //we write the result in html
    filewrite(tempFile, "<p> Cluster : %07d %s</p>", visualvalue(XCLUSTER),getlabel(CNULSAMP,visualvalue(XCLUSTER)));
	filewrite(tempFile, "<p>Number of households in the cluster : %d</p>",xtotal);
	filewrite(tempFile, "<p><font color = blue>Table 1 : Summary of Assignments by interviewer</font></p>");
	filewrite(tempFile, "<table>");
	filewrite(tempFile, "<tr><th>Interviewer code</th><th>Intervierwer name</th><th>Number of households assigned</th><th>Estimated individuals</th></tr>");
	som = 0;
	
	do k= 1 while k <= length(valset.codes);
			x= valset.codes(k);
			filewrite(tempFile, "<tr>");
			filewrite(tempFile, "<td>%03d</td>", x);
			filewrite(tempFile, "<td>%s</td>", getlabel(valset, x));
			filewrite(tempFile, "<td>%d</td>", nbHHAssigned(x));
			tot = 0;
			do n= 1 while n <= visualvalue(XTOTAL) inc(tot,(x=visualvalue(XINTCODE(n)))*(visualvalue(xsize(n))<95)*visualvalue(xsize(n))); enddo;
				
			filewrite(tempFile, "<td>%d</td>", tot);
			filewrite(tempFile, "</tr>");
			som = som + (k>1)*nbHHAssigned(x); //this allows to have the total number of households assigned. K = 1 correspond of non assigned households
	enddo;	 	
 
 	filewrite(tempFile, "</table>");

    	filewrite(tempFile, "<p><font color = blue> Table 2 : Detail of Assignments</font></p>");
		filewrite(tempFile, "<table>");
		filewrite(tempFile, "<tr><th>Line</th><th>HH name</th><th>HH Phone</th><th>HH Size</th><th>Interviewer</th></tr>");
		do varying n= 1 while n <= visualvalue(XTOTAL) 
			
			filewrite(tempFile, "<tr>");
			filewrite(tempFile, "<td>%d</td>", n);
			filewrite(tempFile, "<td>%s</td>", strip(XNAME(n)));
			filewrite(tempFile, "<td>%d</td>", visualvalue(XPHONE(n)));
			filewrite(tempFile, "<td>%d</td>", visualvalue(XSIZE(n)));
			string color1;
			if visualvalue(XINTCODE(n)) = 0 then color1 = "red" else color1 = "black" endif;
			
			filewrite(tempFile, "<td><font color = %s>%s</font></td>",color1, getlabel(valset, visualvalue(XINTCODE(n))));
			filewrite(tempFile, "</tr>");			       
   		 enddo;    	
 		filewrite(tempFile, "</table>");    

	filewrite(tempFile, "</body>");
	filewrite(tempFile, "</html>");
	close(tempFile);
	if getos() in 20:29 then
		// Android - use "browse:"
		execsystem(maketext("view:%s", reportFilename));
	else
		// Windows - use "explorer.exe <filename>"
		execsystem(maketext("%sexplorer.exe %s", 
						    pathname(Windows), 
						    reportFilename));
	endif;
   
   end;
   
FUNCTION saveAssignment()
	//this function save Assignment and write the Assignments in an external file name follow.dat
	close(FOLLOW_DICT);
	setfile(FOLLOW_DICT, "../REF/follow.dat");

	 x = accept("Update ?","Yes","No","Return and correct");
	 if x = 1 then	
		savepartial();

		do i = 1 while i<= XTOTAL
			FCLUSTER=XCLUSTER;
			FNUMBER=visualvalue(XNUMBER(i));
			FHHNUM=visualvalue(XHHNUM(i));
			FNAME=XNAME(i);
			FSIZE=visualvalue(XSIZE(i));
			FLODGING=XLODGING(i);
			FINTCODE=visualvalue(XINTCODE(i));
			FLONGITUDE=visualvalue(XLONGITUDE(i));
			FLATITUDE=visualvalue(XLATITUDE(i));
			FPHONE=visualvalue(XPHONE(i));
			writecase(FOLLOW_DICT);
		enddo;
		 HHAssigned();
		stop(1);
		
	elseif x = 2 then
		stop(1)
	elseif x = 3 then
		reenter XINTCODE(1)
	endif;
END;

FUNCTION onstop()
	saveAssignment();
end;

function string color(xx)
	if xx = 1 then
		color = "red"
	else
		color = "black"
	endif;
end;	

PROC SAMPLE_FF

PROC XCLUSTER

onfocus
	//this test that the field have a valid value and then protect it 
	if !special(visualvalue($)) then 
		protect($,true)
	else
		protect($,false)
	endif;
PROC XTOTAL

onfocus
	do  i = 1 while visualvalue(XHHNUM(i)) >=0
		//we want to have the total number of filled lines in the roster that correspond to the sample size of the cluster
	enddo;
	XTOTAL = i-1;
	
	//this test that the field have a valid value and then protect it 
	if !special(visualvalue($)) then 
		protect($,true)
	else
		protect($,false)
	endif;
PROC XSUP

onfocus
	//this test that the field have a valid value and then protect it 
	if !special(visualvalue($)) then 
		protect($,true)
	else
		protect($,false)
	endif;
PROC XNUMBER

preproc
	$ = curocc();
PROC XHHNUM

onfocus
	//this test that the field have a valid value and then protect it 
	if !special(visualvalue($)) then 
		protect($,true)
	else
		protect($,false)
	endif;
PROC XSIZE

onfocus
	//this test that the field have a valid value and then protect it 
	if !special(visualvalue($)) then 
		protect($,true)
	else
		protect($,false)
	endif;
PROC XINTCODE
PREPROC
	IF VISUALVALUE($) > 0 and curocc() < xtotal then
		noinput;
	endif;
	
onfocus
	//display dynamic valueset of the interviewers of this supervisor
	
	valset.clear();
	valset.add("Not yet assigned",0,textcolor := color(visualvalue($) = 0));
	do i = 0 while i<= 9 //in case of a maximum of 9 interviewers per team
		if getlabel(USERCODE,XSUP+i) <> "" then
			valset.add(getlabel(USERCODE,XSUP+i),XSUP+i,textcolor := color(visualvalue($) = XSUP+i));
		endif;
	enddo;

	setvalueset($,valset);

POSTPROC
	//Savepartial();
PROC XLONGITUDE

onfocus
	//this test that the field have a valid value and then protect it 
	if !special(visualvalue($)) then 
		protect($,true)
	else
		protect($,false)
	endif;
PROC XLATITUDE

onfocus
	//this test that the field have a valid value and then protect it 
	if !special(visualvalue($)) then 
		protect($,true)
	else
		protect($,false)
	endif;
PROC XPHONE

onfocus
	//this test that the field have a valid value and then protect it 
	if !special(visualvalue($)) then 
		protect($,true)
	else
		protect($,false)
	endif;

postproc
	
	if curocc() = XTOTAL then
		saveAssignment();
	endif;
